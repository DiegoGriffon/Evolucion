

##################################################
#    Selección Natural en diploides sexuales     #
#      Para el caso de Fitnesses relativos       #
##################################################


#Supuestos: 
#  Organismos diploides
#  Sexuales
#  Un locus (2 alelos)
#  Fitnesses constantes

# Condiciones iniciales:
p <- 0.1  # Frecuencia inicial del alelo A
q <- 0.9  # Frecuencia inicial del alelo a

# Parámetros:
s1 <- 0.0  # Coeficiente de selección para AA
s2 <- 0.1  # Coeficiente de selección para Aa
s3 <- 0.2  # Coeficiente de selección para aa

# Tiempo a simular:
Generaciones <- 100  # Número de generaciones a simular

# Función para calcular el fitness medio:
Fitness_Promedio <- function(p, q, s) {
  p^2 * (1 - s1) + 2 * p * q * (1 - s2) + q^2 * (1 - s3)
}

# Vectores para almacenar las frecuencias a lo 
# largo de las generaciones:
p_valores <- numeric(Generaciones)
q_valores <- numeric(Generaciones)
p_valores[1] <- p
q_valores[1] <- q

# Simulación a lo largo de las generaciones:
for (gen in 2:Generaciones) {
  w_barra <- Fitness_Promedio(p, q, s)
  f_AA <- p^2*(1 - s1) / w_barra
  f_Aa <- 2 * p * q * (1 - s2) / w_barra
  f_aa <- q^2 * (1 - s3) / w_barra
  
  p <- f_AA + 0.5 * f_Aa
  q <- f_aa + 0.5 * f_Aa
  
  p_valores[gen] <- p
  q_valores[gen] <- q
}

# Resultados:
Resultados <- data.frame(Generación = 1:Generaciones, Frecuencia_A = p_valores, Frecuencia_a = q_valores)

print(Resultados)

# Gráfico de las frecuencias alélicas:
library(ggplot2)

ggplot(Resultados, aes(x = Generación)) +
  geom_line(aes(y = Frecuencia_A, color = "Frecuencia A")) +
  geom_line(aes(y = Frecuencia_a, color = "Frecuencia a")) +
  labs(title = "Evolución de las Frecuencias Alélicas", y = "Frecuencia", color = "Alelo") +
  theme_minimal()

# Ojo: Si se va a correr de nuevo, es importante asegurarse
# de dar a "p" y "q" sus valores iniciales. 


